In this directory you find a few examples. Keep in mind that the puzzle designs
are owned by their corresponding designers and that you need to ask them if you
want to produce one of them commercially. They all have been so kind and
allowed me to bundle them here with the program.
Each design also demonstrates some of the features of the program so I will
tell a few words about each of them.

AlPackino: Designed by Ronald Kint-Bruynseels
This puzzle shows how to properly make packing puzzles. You always should
include the box as a piece so that the program can also check, if the pieces
can be moved into the box. You can also see how to handle multiple identical
pieces. When looking at the solution it is useful to display the box as a
wire frame. This can be done by clicking at the blue rectangle at the lower end
of the tools. The rectangle with the text "S1 - Box" in it.

Ball Room: Designed by Stewart Coffin
This puzzle shows the sphere gridspace. If also shows how to include more than
one problem within one file.

Bermuda: Designed by Bill Cutler
This is a puzzle using the triangular gridspace. You can see that several layers
of triangles can be stacked on top of one another

CubeInCage: Designed by Mineyuki Uyematsu
This file contains MINE's CUBE in CAGE 333 cube g. This file demonstrates how
to use the grouping capabilities. The puzzle contains 3 interlocked pieces
that construct a cage. The piece move but can not be taken apart. It needs
to be told to the program that this is intentional. So here you have an example
of how to do that.

Draculas Dental Desaster: Designed by Ronald Kint-Bruynseels
This puzzle demonstrated the used of colour contraints. Halve of the end result
must be red and the other halve black. You can see the colours if you enable
the checkbox in the statusline at the bottom right.

Pelikan Burr: Designed by Dic Sonneveld
This is a _very_ high level burr. It takes 98 moves to get the first piece out
of the box. This is just a demonstration of what is possible.

Solid 6-Piece Burr:
This file demonstrates the usage of piece ranges. It is possible to let BurrTools
search for all possible assemlies with a set of pieces by telling it that a piece
might be used 0-x times within the solution. The file included contains all pieces
that might be used in a solid 6-piece burr and says that each piece might be used
0-6 times.